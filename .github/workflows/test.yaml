name: Check Test Coverage

on:
  push:
    paths:
      - 'src/services/**'  # Trigger on changes in src/services/
      - '.github/workflows/test.yaml'  # Trigger on changes in the workflow file
      - '*'  # Also trigger on any other changes
    branches:
      - main  # Adjust this to your default branch
  pull_request:
    paths:
      - 'src/services/**'  # Trigger on pull requests with changes in src/services/
    branches:
      - main  # Adjust this to your default branch

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to the latest version

      - name: Set up Go
        uses: actions/setup-go@v4  # Updated to the latest version
        with:
          go-version: '1.21'  # Updated to the latest Go version

      - name: Install dependencies
        run: |
          # Iterate through each service and download dependencies
          for service in src/services/*; do
            if [ -d "$service" ]; then
              echo "Installing dependencies for $(basename "$service")..."
              cd "$service"
              go mod download
              cd -  # Return to the root directory
            fi
          done

      - name: Run tests and collect coverage
        run: |
          for service in src/services/*; do
            service_name=$(basename "$service")
            echo "Service name - $service_name"
            
            # Check if the directory has a go.mod file
            if [ -f "$service/go.mod" ]; then
              if [ -d "$service/tests" ]; then
                # Navigate to the service directory and run tests
                (cd "$service" && go test -coverpkg=./... -coverprofile=coverage.out ./tests) || exit 1
              elif [ -f "$service/main_test.go" ]; then
                # Run tests in the main_test.go file
                (cd "$service" && go test -coverpkg=./... -coverprofile=coverage.out .) || exit 1
              fi
              
              # Process the coverage file
              if [ -f "$service/coverage.out" ]; then
                go tool cover -func="$service/coverage.out"
                rm "$service/coverage.out"
              fi
            else
              echo "Skipping $service_name: No go.mod file found."
            fi
          done
