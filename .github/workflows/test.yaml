name: Check Test Coverage

on:
  workflow_dispatch:
  pull_request:
    branches: [dev, test, preprod, main]
    paths:
      - '.github/workflows/test.yaml'
      - 'src/services/**'

  push:
    branches: [dev, test, preprod, main]
    paths:
      - '.github/workflows/test.yaml'
      - 'src/services/**'

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          for service in src/services/*; do
            if [ -d "$service" ]; then
              echo "Installing dependencies for $(basename "$service")..."
              cd "$service"
              go mod download
              cd -
            fi
          done

      - name: Run tests and collect coverage
        run: |
          for service in src/services/*; do
            service_name=$(basename "$service")

            # Start a collapsible section for each service
            echo "::group::Test Coverage for $service_name"
            
            if [ -d "$service/tests" ]; then
              (cd "$service" && \
              (go test -coverpkg=./... -coverprofile=coverage.out ./tests) &&  (go tool cover -func=coverage.out)) || exit 1
            elif [ -f "$service/main_test.go" ]; then
              (cd "$service" && \
              (go test -coverpkg=./... -coverprofile=coverage.out .) &&  (go tool cover -func=coverage.out)) || exit 1
            fi

            # End the collapsible section
            echo "::endgroup::"
            
            cd "$service"
            rm "coverage.out"
            cd -
          done
