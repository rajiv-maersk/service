name: Check Test Coverage

on:
  workflow_dispatch:
  pull_request:
    branches: [dev, test, preprod, main]
    paths:
      - '.github/workflows/test.yaml'
      - 'src/services/**'

  push:
    branches: [dev, test, preprod, main]
    paths:
      - '.github/workflows/test.yaml'
      - 'src/services/**'

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          # Iterate through each service and download dependencies
          for service in src/services/*; do
            if [ -d "$service" ]; then
              echo "Installing dependencies for $(basename "$service")..."
              cd "$service"
              echo "Current directory: $(pwd)"  # Log the current directory
              go mod download
              cd -  # Return to the root directory
            fi
          done

      - name: Run tests and collect coverage
        run: |
          for service in src/services/*; do
            service_name=$(basename "$service")
            echo "Service name: $service_name"
            if [ -d "$service/tests" ]; then
              (cd "$service" && \
              go test -coverpkg=./... -coverprofile=coverage.out ./tests) &&  (go tool cover -func=coverage.out) || exit 1
            elif [ -f "$service/main_test.go" ]; then
              # Run tests in the main_test.go file
              (cd "$service" && \
              go test -coverpkg=./... -coverprofile=coverage.out .) &&  (go tool cover -func=coverage.out) || exit 1
            fi
            cd "$service"
            rm "coverage.out"  # Remove the old coverage file
            cd -  # Return to the root directory
          done
